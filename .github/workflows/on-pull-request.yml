name: Tests

on:
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      max-parallel: 3
      matrix:
        operating-system:
          - ubuntu-latest
          #- windows-latest # Todo: make it work also for windows
          #- macOS-latest # Todo: make it work also for macos
        php-versions:
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
    name: PHP ${{ matrix.php-versions }} test on ${{ matrix.operating-system }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup CodeClimate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: curl, gd, json, mbstring, pcre
          ini-values: post_max_size=256M
          coverage: xdebug
          tools: phpunit:5.7.27
      - name: Check PHP Version
        run: php -v
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --no-dev --prefer-dist --optimize-autoloader
      - name: Prepare CodeClimate
        run: GIT_BRANCH=$GITHUB_REF GIT_COMMIT_SHA=$GITHUB_SHA ./cc-test-reporter before-build
      - name: Testing with PHPUnit
        run: |
          phpunit -c phpunit.xml
          phpunit -c tests/configuration.xml
          mv ./build/clover.xml ./clover.xml
      - name: Commiting CodeClimate data
        run: GIT_BRANCH=$GITHUB_REF GIT_COMMIT_SHA=$GITHUB_SHA ./cc-test-reporter after-build --exit-code $? -t clover -r ${{ secrets.CODECLIMATE_KEY }}

  dependabot:
    needs: tests
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    # Checking the actor will prevent your Action run failing on non-Dependabot
    # PRs but also ensures that it only does work for Dependabot PRs.
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      # This first step will fail if there's no metadata and so the approval
      # will not occur.
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2.3.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      # Here the PR gets approved.
      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Finally, this sets the PR to allow auto-merging for patch and minor
      # updates if all checks pass
      - name: Enable auto-merge for Dependabot PRs
        # if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
